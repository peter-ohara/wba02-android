<div id="pasco-comments" class="pasco-comments-invisible">
    <div class="comments-count-box">
        <i class="fa fa-comments-o fa-lg"></i>
        <span class="comments-count">{$commentCount} Comments</span>
        <i class="fa fa-times"></i>
        <hr class="comment-hr">
    </div>
    <div id="comments-container"></div>
</div>


<script>var commentsArray = {$comments};</script>
<script>var commentableType = "{$commentableType}";</script>
<script>var commentableId = {$commentableId};</script>

<script type="text/javascript" src="file:///android_asset/js/custom-script.js"></script>
<script type="text/javascript" src="file:///android_asset/js/jquery-comments.min.js"></script>


<!-- Init jquery-comments -->
<script type="text/javascript">
    $(function() {
        var baseUrl = "{$BASE_URL}";
        var url = baseUrl + "comments/";
        var upvotesURL = baseUrl + "upvotes/";
        var authToken = "{$authToken}";

        var profilePictureURL = "{$profilePictureURL}";

        var headers = {
           'Authorization': "Token token=" + authToken,
        };

        $('#comments-container').comments({
            profilePictureURL: profilePictureURL,
            roundProfilePictures: true,
            defaultNavigationSortKey: 'popularity',
            textareaRows: 1,
            textareaRowsOnFocus: 2,
            maxRepliesVisible: 2,
            enableDeletingCommentWithReplies: true,
            enableAttachments: false,
            getComments: function(success, error) {
                success(commentsArray)
            },
            postComment: function(commentJSON, success, error) {
                commentJSON.commentable_type = commentableType;
                commentJSON.commentable_id = commentableId;
                $.ajax({
                    type: 'post',
                    url: url,
                    headers: headers,
                    data: { "comment": commentJSON },
                    success: function(comment) {
                        success(comment)
                    },
                    error: function(error) {
                        console.log(JSON.stringify(error));
                    }
                });
            },
            putComment: function(commentJSON, success, error) {
                commentJSON.commentable_type = commentableType;
                commentJSON.commentable_id = commentableId;
                $.ajax({
                    type: 'put',
                    url: url + commentJSON.id,
                    headers: headers,
                    data: { "comment": commentJSON },
                    success: function(comment) {
                        success(comment)
                    },
                    error: error
                });
            },
            deleteComment: function(commentJSON, success, error) {
                $.ajax({
                    type: 'delete',
                    url: url + commentJSON.id,
                    headers: headers,
                    success: success,
                    error: error
                });
            },
            upvoteComment: function(commentJSON, success, error) {
                if(commentJSON.user_has_upvoted) {
                    // Create his upvote
                    $.ajax({
                        type: 'post',
                        url: upvotesURL,
                        headers: headers,
                        data: {
                            upvote: {
                                comment_id: commentJSON.id
                            }
                        },
                        success: function() {
                            success(commentJSON)
                        },
                        error: error
                    });
                } else {
                    // Delete his upvote
                    $.ajax({
                        type: 'delete',
                        url: upvotesURL + commentJSON.id,
                        headers: headers,
                        success: function() {
                            success(commentJSON)
                        },
                        error: error
                    });
                }
            }
        });
    });
</script>
